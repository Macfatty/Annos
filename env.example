# Annos Environment Variables Example
# Kopiera denna fil till backend/.env och frontend/.env

# ===== BACKEND (.env) =====

# JWT Secrets (OBLIGATORISKT - använd starka, slumpmässiga strängar i produktion)
JWT_SECRET=your-jwt-secret-256-bits-minimum
REFRESH_SECRET=your-refresh-secret-256-bits-minimum

# Server Configuration
PORT=3001
NODE_ENV=development
FRONTEND_ORIGIN=http://localhost:5173

# Database Configuration (PostgreSQL) - OBLIGATORISKT
# Viktigt: DB_NAME måste vara 'annos_dev' för att använda rätt databas
DB_HOST=localhost
DB_PORT=5432
DB_NAME=annos_dev
DB_USER=postgres
DB_PASSWORD=your-postgres-password-here

# Payment Providers (Development)
PAYMENT_PROVIDER_SWISH_MOCK=true
PAYMENT_PROVIDER_SWISH_CALLBACK_URL=http://localhost:3001/api/payments/callback

# ===== FRONTEND (.env) =====

# API Base URL
VITE_API_BASE_URL=http://localhost:3001

# ===== STARTUP PROCESS =====
# Servern använder startup.js som implementerar Separation of Concerns (SoC):
# 1. Infrastructure Setup - Kontrollerar PostgreSQL-anslutning
# 2. Data Migration - Skapar tabeller och sequences automatiskt
# 3. Maintenance Tasks - Synkroniserar sequences
# 4. Application Startup - Startar Express server
#
# Kommando: npm start (använder startup.js)
# Alternativ: npm run start:dev (använder server.js direkt)

# ===== PRODUCTION NOTES =====
# I produktion:
# 1. Använd starka, slumpmässiga secrets (minst 256 bitar)
# 2. Aktivera HTTPS för alla endpoints
# 3. Konfigurera Swish-certifikat för betalningar
# 4. Använd Redis för rate limiting istället för minnesbaserad
# 5. Sätt upp monitoring och loggning
# 6. Säkerställ att DB_NAME pekar på rätt databas
